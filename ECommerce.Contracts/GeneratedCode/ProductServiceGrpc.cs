// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProductService.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace ECommerce.Contracts {
  public static partial class ProductService
  {
    static readonly string __ServiceName = "ECommerce.Contracts.ProductService";

    static readonly grpc::Marshaller<global::ECommerce.Contracts.GetProductsByFamilyRequest> __Marshaller_GetProductsByFamilyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ECommerce.Contracts.GetProductsByFamilyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ECommerce.Contracts.GetProductsResponse> __Marshaller_GetProductsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ECommerce.Contracts.GetProductsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ECommerce.Contracts.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ECommerce.Contracts.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::ECommerce.Contracts.GetProductsByFamilyRequest, global::ECommerce.Contracts.GetProductsResponse> __Method_GetProductsByFamily = new grpc::Method<global::ECommerce.Contracts.GetProductsByFamilyRequest, global::ECommerce.Contracts.GetProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProductsByFamily",
        __Marshaller_GetProductsByFamilyRequest,
        __Marshaller_GetProductsResponse);

    static readonly grpc::Method<global::ECommerce.Contracts.Empty, global::ECommerce.Contracts.GetProductsResponse> __Method_GetProducts = new grpc::Method<global::ECommerce.Contracts.Empty, global::ECommerce.Contracts.GetProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProducts",
        __Marshaller_Empty,
        __Marshaller_GetProductsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ECommerce.Contracts.ProductServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProductService</summary>
    public abstract partial class ProductServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::ECommerce.Contracts.GetProductsResponse> GetProductsByFamilyAsync(global::ECommerce.Contracts.GetProductsByFamilyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ECommerce.Contracts.GetProductsResponse> GetProducts(global::ECommerce.Contracts.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ProductService</summary>
    public partial class ProductServiceClient : grpc::ClientBase<ProductServiceClient>
    {
      /// <summary>Creates a new client for ProductService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProductServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ProductService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProductServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProductServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProductServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::ECommerce.Contracts.GetProductsResponse GetProductsByFamily(global::ECommerce.Contracts.GetProductsByFamilyRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetProductsByFamily(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ECommerce.Contracts.GetProductsResponse GetProductsByFamily(global::ECommerce.Contracts.GetProductsByFamilyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProductsByFamily, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::ECommerce.Contracts.GetProductsResponse> GetProductsByFamilyAsync(global::ECommerce.Contracts.GetProductsByFamilyRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetProductsByFamilyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::ECommerce.Contracts.GetProductsResponse> GetProductsByFamilyAsync(global::ECommerce.Contracts.GetProductsByFamilyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProductsByFamily, null, options, request);
      }
      public virtual global::ECommerce.Contracts.GetProductsResponse GetProducts(global::ECommerce.Contracts.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ECommerce.Contracts.GetProductsResponse GetProducts(global::ECommerce.Contracts.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProducts, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::ECommerce.Contracts.GetProductsResponse> GetProductsAsync(global::ECommerce.Contracts.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::ECommerce.Contracts.GetProductsResponse> GetProductsAsync(global::ECommerce.Contracts.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProducts, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProductServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProductServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProductServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetProductsByFamily, serviceImpl.GetProductsByFamilyAsync)
          .AddMethod(__Method_GetProducts, serviceImpl.GetProducts).Build();
    }

  }
}
#endregion
